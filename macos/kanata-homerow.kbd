(defcfg
  process-unmapped-keys yes
  log-layer-changes no
  concurrent-tap-hold yes
  chords-v2-min-idle 30
)

(defsrc
 q w e r t y u i o p
 a s d f g h j k l
 z x c v b n m caps lctrl lshift rshift ; ' [ ] \ , . / ` 1 2 3 4 5 6 7 8 9 0 - = enter
)

(defvar
  timeoutregulartyping 200
  timeouttap 300
  timeouthold 300
)

;; ----------------------------
;; BASE LAYER
;; ----------------------------

(deflayer base
 @q w e r t y u i o p
 @a @s @d @f g h @j @k @l
 @z @x @c @v b n m @caps @lctrl lshift rshift @scln ' [ ] \ , . / ` 1 2 3 4 5 6 7 8 9 0 - = enter
)

(deflayer nomods
 q w e r t y u i o p
 a s d f g h j k l
 z x c v b n m caps lctrl lshift rshift ; ' [ ] \ , . / ` 1 2 3 4 5 6 7 8 9 0 - = enter
)

(deffakekeys
  to-base (layer-switch base)
)

(defchordsv2

  (s d) (multi lalt lctrl) 30 all-released ()
  (s d f) (multi lalt lctrl lshift) 30 all-released ()
  (s f) (multi lalt lshift) 30 all-released ()
  (d f) (multi lctrl lshift) 30 all-released ()

  (a s d f) (multi lmet lalt lctrl lshift) 30 all-released ()
  (a s d) (multi lmet lalt lctrl) 30 all-released ()
  (a s f) (multi lmet lalt lshift) 30 all-released ()
  (a d f) (multi lmet lctrl lshift) 30 all-released ()
  (a s) (multi lmet lalt) 200 all-released ()
  (a d) (multi lmet lctrl) 200 all-released ()
  (a f) (multi lmet lshift) 200 all-released ()

  (a y) (multi lmet y) 30 all-released ()
  (a u) (multi lmet u) 30 all-released ()
  (a i) (multi lmet i) 30 all-released ()
  (a o) (multi lmet o) 30 all-released ()
  (a p) (multi lmet p) 30 all-released ()

  (l k) (multi ralt rctrl) 30 all-released ()
  (l k j) (multi ralt rctrl rshift) 30 all-released ()
  (l j) (multi ralt rshift) 30 all-released ()
  (k j) (multi rctrl rshift) 30 all-released ()

  (scln l k j) (multi rmet ralt rctrl lshift) 30 all-released ()
  (scln l k) (multi rmet ralt rctrl) 30 all-released ()
  (scln l j) (multi rmet ralt lshift) 30 all-released ()
  (scln k j) (multi rmet rctrl lshift) 30 all-released ()
  (scln l) (multi rmet ralt) 30 all-released ()
  (scln k) (multi rmet rctrl) 30 all-released ()
  (scln j) (multi rmet lshift) 30 all-released ()

)

(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap $timeoutregulartyping)
  )

  caps (tap-hold $timeouttap $timeouthold (multi M-A-d) lmet)
  lctrl caps
  a (tap-hold-release-keys $timeouttap $timeouthold (multi a @tap) (layer-while-held a-layer) (z x y u i o p h j k l b n m))
  s (tap-hold-release-keys $timeouttap $timeouthold (multi s @tap) lalt (q w u i o p a j k l z x c c v b n m))
  d (tap-hold-release-keys $timeouttap $timeouthold (multi d @tap) lctrl (q w e r t y u i o p a s d f g h j k l z x c v b n m))
  f (tap-hold-release-keys $timeouttap $timeouthold (multi f @tap) (layer-while-held f-layer) (r t y u i o p g h j k l c v b n m))

  z (tap-hold-release-keys $timeouttap $timeouthold (multi z @tap) (layer-while-held z-layer) (q w e r t y g h b n m))
  x (tap-hold-release-keys $timeouttap $timeouthold (multi x @tap) (layer-while-held x-layer) (q w e r t y a s f g h z c v b n m l k))
  c (tap-hold-release-keys $timeouttap $timeouthold (multi c @tap) (layer-while-held c-layer) (q w e r t y a s d f g h z x v b n m l k))
  v (tap-hold-release-keys $timeouttap $timeouthold (multi v @tap) (layer-while-held v-layer) (q w e r t y a s d f g h c b n m l k))

  q (tap-hold-release-keys $timeouttap $timeouthold (multi q @tap) (layer-while-held q-layer) (y u i o p a s d f g h j k l z x c v b n m))

  j (tap-hold-release-keys $timeouttap $timeouthold (multi j @tap) rshift ())
  l (tap-hold-release-keys $timeouttap $timeouthold (multi l @tap) ralt ())
  k (tap-hold-release-keys $timeouttap $timeouthold (multi k @tap) rctrl ())
  scln (tap-hold-release-keys $timeouttap $timeouthold scln rmet ())
)

;; ----------------------------
;; A-LAYER
;; ----------------------------

(deflayermap (a-layer)
  w (macro A-1)
  e (macro A-2)
  r (macro A-3)
  t (macro A-4)
  s (macro A-5)
  d (macro A-6)
  f (macro A-7)
  g (macro A-8)
  c (macro A-9)
  v (macro A-0)
  q (macro M-q)
  spc (macro A-spc)

  y (macro M-y)
  u (macro M-u)
  i (macro M-i)
  o (macro M-o)
  p (macro M-p)
  h (macro M-h)
  j (macro M-j)
  k (macro M-k)
  l (macro M-l)
  b (macro M-b)
  n (macro M-n)
  m (macro M-m)

  , (macro M-,)
  . (macro M-.)
  / (macro M-/)
  ' (macro M-')
  \ (macro M-\)
  [ (macro M-[)
  ] (macro M-])
  - (macro M--)
  + (macro M-+)
  ; (macro M-;)
  ` (macro M-`)

  1 (macro M-1)
  2 (macro M-2)
  3 (macro M-3)
  4 (macro M-4)
  5 (macro M-5)
  6 (macro M-6)
  7 (macro M-7)
  8 (macro M-8)
  9 (macro M-9)
  0 (macro M-0)

  F1 (macro M-F1)
  F2 (macro M-F2)
  F3 (macro M-F3)
  F4 (macro M-F4)
  F5 (macro M-F5)
  F6 (macro M-F6)
  F7 (macro M-F7)
  F8 (macro M-F8)
  F9 (macro M-F9)
  F10 (macro M-F10)
  F11 (macro M-F11)
  F12 (macro M-F12)

)

;; ----------------------------
;; F-LAYER
;; ----------------------------

(deflayermap (f-layer)
  q (macro A-f1)
  w (macro A-f2)
  e (macro A-f3)
  a (macro A-f4)
  s (macro A-f5)
  d (macro A-f6)
  z (macro A-f7)
  x (macro A-f8)

  y (macro S-y)
  u (macro S-u)
  i (macro S-i)
  o (macro S-o)
  p (macro S-p)
  h (macro S-h)
  j (macro S-j)
  k (macro S-k)
  l (macro S-l)
  b (macro S-b)
  n (macro S-n)
  m (macro S-m)

  , (macro S-,)
  . (macro S-.)
  / (macro S-/)
  ' (macro S-')
  \ (macro S-\)
  [ (macro S-[)
  ] (macro S-])
  - (macro S--)
  + (macro S-+)
  ; (macro S-;)
  ` (macro S-`)

  1 (macro S-1)
  2 (macro S-2)
  3 (macro S-3)
  4 (macro S-4)
  5 (macro S-5)
  6 (macro S-6)
  7 (macro S-7)
  8 (macro S-8)
  9 (macro S-9)
  0 (macro S-0)

  F1 (macro S-F1)
  F2 (macro S-F2)
  F3 (macro S-F3)
  F4 (macro S-F4)
  F5 (macro S-F5)
  F6 (macro S-F6)
  F7 (macro S-F7)
  F8 (macro S-F8)
  F9 (macro S-F9)
  F10 (macro S-F10)
  F11 (macro S-F11)
  F12 (macro S-F12)

)

;; ----------------------------
;; Z-LAYER
;; ----------------------------

(deflayermap (z-layer)
  u (macro home)
  o (macro end)
  j (macro left)
  k (macro down)
  i (macro up)
  l (macro right)
  p (macro pgup)
  ; (macro pgdn)

  x (macro M-x)
  c (macro M-c)
  v (macro M-v)
  s (macro M-s)
  f (macro M-f)
  a (macro M-a)
  d (macro bks)
)

;; ----------------------------
;; X-LAYER
;; ----------------------------

(deflayermap (x-layer)
  u (macro S-home)
  o (macro S-end)
  j (macro S-left)
  k (macro S-down)
  i (macro S-up)
  l (macro S-right)
  p (macro S-pgup)
  ; (macro S-pgdn)

  d (macro del)
)

;; ----------------------------
;; C-LAYER
;; ----------------------------

(deflayermap (c-layer)
  u (macro A-home)
  o (macro A-end)
  j (macro A-left)
  k (macro A-down)
  i (macro A-up)
  l (macro A-right)
  p (macro S-pgup)
  ; (macro S-pgdn)
)

;; ----------------------------
;; V-LAYER
;; ----------------------------

(deflayermap (v-layer)
  u (macro A-S-home)
  o (macro A-S-end)
  j (macro A-S-left)
  k (macro A-S-down)
  i (macro A-S-up)
  l (macro A-S-right)
  p (macro S-pgup)
  ; (macro S-pgdn)

  z (macro M-z)
  x (macro M-S-z)
  d (macro M-S-k)
)

;; ----------------------------
;; Q-LAYER
;; ----------------------------

(deflayermap (q-layer)
  w (macro M-w)
  e (macro C-S-tab)
  r (macro C-tab)
  t (macro M-t)
)